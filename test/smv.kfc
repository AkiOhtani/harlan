;; -*- scheme -*-

;; Sparse matrix-vector

(module
  (define (main)
      (let Ai (vector
               (vector 0)
               (vector 1)
               (vector 2)
               (vector 3)))
      (let Av (vector
               (vector 1)
               (vector 1)
               (vector 1)
               (vector 1)))
      (let X (vector 1 2 3 4))
      (let Y (kernel ((is (var Ai)) (vs (var Av)))
                     (reduce + (kernel ((i (var is)) (v (var vs)))
                                       (* (var v) (vector-ref X (var i)))))))
      ;;(assert (= (var X) (var Y)))
      (for (i 0 (length X))
           (assert (= (vector-ref X i) (vector-ref Y i))))
      (return 0)))
