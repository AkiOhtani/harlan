;; -*- scheme -*-

(module
  (fn main ()
      (let i 0)
      (let j 0)
      (let cr (- (/ (int->float i) 512.0) 1.0))
      (let ci (- (/ (int->float j) 512.0) 1.0))
      (let xr 0.0)
      (let xi 0.0)
      (let idx 0)
      (let escape 0)
      (while (< idx 256)
        (let xrp (+ (- (* xr xr) (* xi xi)) cr))
        (let xip (+ (* 2.0 (* xr xi)) ci))
        (set! xr xrp)
        (set! xi xip)
        (let m (+ (* xr xr) (* xi xi)))
        (while (< m 4.0)
          (set! escape idx)
          (set! m 5.0))
        (set! idx (+ idx 1)))
      (return 0)))