;; -*- scheme -*-

;; DMM transpose using only for loops.

;; A part of ense matrix-matrix product
;; use loops instead of nested kernels

(module
  
  (define (main)
      (let B (vector
              (vector 1 0)
              (vector 0 1)))
      (print B)
      (let Bt (make-vector 2))
      (for (j 0 (length (vector-ref B 0)))
        (let io (iota 2))
        (let row (make-vector 2))
        (for (i 0 (length io))
             (vector-set! row i (vector-ref (vector-ref B (var j)) (var i))))
        (vector-set! (var Bt) (var j) (var row)))
      (print "\n")
      (print Bt)
      (return 0)))
