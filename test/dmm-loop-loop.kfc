;; -*- scheme -*-

;; DMM transpose using only for loops.

;; A part of ense matrix-matrix product
;; use loops instead of nested kernels

(module
  (extern print_2x2_int_vec ((vec (vec int 2) 2)) -> void)
  
  (define (main)
      (let B (vector
              (vector 1 0)
              (vector 0 1)))
      (print_2x2_int_vec B)
      (let Bt (make-vector 2 (make-vector 2 0)))
      (for (j 0 (length (vector-ref B 0)))
        (let io (iota 2))
        (let row (make-vector 2 0))
        (for (i 0 (length io))
             (vector-set! row i (vector-ref (vector-ref B j) i)))
        (vector-set! Bt j row))
      (print "\n")
      (print_2x2_int_vec Bt)
      (return 0)))
