#! /usr/bin/env scheme-script
;; -*- scheme -*-
(import
  (chezscheme)
  (harlan compile-opts)
  (harlan driver)
  (elegant-weapons print-c)
  (harlan compiler))

;; Converts foo/bar.kfc to bar
(define (output-filename input)
  (path-last (path-root input)))

(define print-compile-harlan
  (lambda (filename)
    (let-values (((input testspec) (read-source filename)))
      (if (assq 'iterate testspec)
          (error 'harlanc
                 "Test iteration is not supported. Use run-tests.scm instead.")
          (let* ((c-expr (compile-harlan input))
                 (c-code (format-c c-expr)))
            (if (verbose) (printf c-code))
            (g++-compile-stdin c-code (output-filename filename)))))))

;; (trace-pass
;;  'remove-nested-kernels
;;  'optimize-lift-lets)

(let* ((fverbose (equal? (cadr (command-line)) "-v"))
       (args (if fverbose
                 (cddr (command-line))
                 (cdr  (command-line)))))
  (verbose fverbose)
  (unless (null? args)
    (let ((filename (car args)))
      (print-compile-harlan filename))))
